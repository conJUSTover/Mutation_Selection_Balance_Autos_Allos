# FIRST FIGURE: Q differences with mutation rate as rows
p_q_diff <- ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 10) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
# Remove the dominance filter to include all dominance classes
pd_genotype_data <- full_data %>%
filter(Model %in% c("Autotetraploid", "Allotetraploid")) %>%
select(s, Model, Dominance, PD, G0, G1, G2, G3, G4) %>%
pivot_longer(cols = c(PD, G0, G1, G2, G3, G4),
names_to = "Variable",
values_to = "Value") %>%
mutate(Variable = factor(Variable, levels = c("PD", "G0", "G1", "G2", "G3", "G4")))
# Update the plot to facet by both Variable and Dominance
p_load_bump_all <- ggplot(pd_genotype_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth = .75) +
facet_grid(Variable ~ Dominance, scales = "free_y",
labeller = labeller(Variable = as_labeller(variable_labeller, default = label_parsed),
Dominance = label_value)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump_all, width = 12, height = 7, units = "in")  # Increase width
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
# Update the plot to facet by both Variable and Dominance
p_load_bump <- ggplot(pd_genotype_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth = .75) +
facet_grid(Variable ~ Dominance, scales = "free_y",
labeller = labeller(Variable = as_labeller(variable_labeller, default = label_parsed),
Dominance = label_value)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
plot.caption = element_text(hjust = 0.5, size = 6)
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model") +
plot_annotation(caption = "Note: For genotype plots, autotetraploid lines are hidden beneath allotetraploid lines")
ggsave("load_bump.pdf", p_load_bump, width = 12, height = 7, units = "in")  # Increase width
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
# Save
ggsave("equal_mut_bifn.pdf", final_plot, width = 6.5, height = 4.5, units = "in")
# Bottom row: Mutation load plot
p_load <- ggplot(full_data, aes(x = s, y = load, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
limits = c(0, 5e-8),
breaks = c(0, 1e-8, 2e-8, 3e-8, 4e-8, 5e-8),
labels = scales::label_scientific()
) +
# Add panel labels
geom_text(data = panel_labels_bottom, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
labs(x = "s (Selection Coefficient)", y = "Mutation Load") +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
)
# Create data frame for panel labels
panel_labels_top <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("A", "B", "C", "D", "E"),
x = rep(3e-4, 5),  # x position for labels
y = rep(0.95, 5)   # y position for labels
)
panel_labels_bottom <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("F", "G", "H", "I", "J"),
x = rep(3e-4, 5),   # x position for labels
y = rep(4.75e-8, 5) # y position for labels
)
# Top row: Allele frequency (q) plot
p_q <- ggplot(full_data, aes(x = s, y = q, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1, strip.position = "top") +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4)
) +
scale_y_continuous(
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1)
) +
# Add panel labels
geom_text(data = panel_labels_top, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
labs(y = "Allele Frequency", x = NULL, color = "Model")
# Bottom row: Mutation load plot
p_load <- ggplot(full_data, aes(x = s, y = load, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
limits = c(0, 5e-8),
breaks = c(0, 1e-8, 2e-8, 3e-8, 4e-8, 5e-8),
labels = scales::label_scientific()
) +
# Add panel labels
geom_text(data = panel_labels_bottom, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
labs(x = "s (Selection Coefficient)", y = "Mutation Load") +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
)
# Combine plots
final_plot <- p_q / p_load +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
# Save
ggsave("equal_mut_bifn_alt.pdf", final_plot, width = 6.5, height = 4, units = "in")
# Color mapping
ploidy_colors <- c("Diploid" = dip_color,
"Autotetraploid (hidden beneath allotetraploid)" = auto_color,
"Allotetraploid" = allo_color)
# Create data frame for panel labels
panel_labels_top <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("A", "B", "C", "D", "E"),
x = rep(3e-4, 5),  # x position for labels
y = rep(0.95, 5)   # y position for labels
)
panel_labels_bottom <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("F", "G", "H", "I", "J"),
x = rep(3e-4, 5),   # x position for labels
y = rep(4.75e-8, 5) # y position for labels
)
# Top row: Allele frequency (q) plot
p_q <- ggplot(full_data, aes(x = s, y = q, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1, strip.position = "top") +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4)
) +
scale_y_continuous(
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1)
) +
# Add panel labels
geom_text(data = panel_labels_top, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
labs(y = "Allele Frequency", x = NULL, color = "Model")
# Bottom row: Mutation load plot
p_load <- ggplot(full_data, aes(x = s, y = load, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
limits = c(0, 5e-8),
breaks = c(0, 1e-8, 2e-8, 3e-8, 4e-8, 5e-8),
labels = scales::label_scientific()
) +
# Add panel labels
geom_text(data = panel_labels_bottom, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
labs(x = "s (Selection Coefficient)", y = "Mutation Load") +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
)
# Combine plots
final_plot <- p_q / p_load +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
# Save
ggsave("equal_mut_bifn_alt.pdf", final_plot, width = 6.5, height = 4, units = "in")
auto <- auto %>%
mutate(G0 = g0^2,
G1 = 2*g0*g1,
G2 = 2*g0*g2 + g1^2,
G3 = 2*g1*g2,
G4 = g2^2,
load = 1-w,
PD = g2 - q^2,
Model = "Autotetraploid (hidden beneath allotetraploid)")
allo <- allo %>%
mutate(G0 = g00^2,
G1 = 2*g00*(g01+g10),
G2 = g01^2 + 2*(g00*g11 + g01*g10) + g10^2,
G3 = 2*g11*(g01 + g10),
G4 = g11^2,
load = 1-w,
PD = g11 - q^2,
Model = "Allotetraploid")
# Combine all datasets
full_data <- bind_rows(dip, auto, allo)
# Set ploidy as a factor for consistent color and legend order
full_data$Model <- factor(full_data$Model, levels = c("Diploid", "Autotetraploid (hidden beneath allotetraploid)", "Allotetraploid"))
# Color mapping
ploidy_colors <- c("Diploid" = dip_color,
"Autotetraploid (hidden beneath allotetraploid)" = auto_color,
"Allotetraploid" = allo_color)
# Create data frame for panel labels
panel_labels_top <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("A", "B", "C", "D", "E"),
x = rep(3e-4, 5),  # x position for labels
y = rep(0.95, 5)   # y position for labels
)
panel_labels_bottom <- data.frame(
Dominance = factor(c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant"),
levels = c("Recessive", "Partially Recessive", "Additive", "Partially Dominant", "Dominant")),
label = c("F", "G", "H", "I", "J"),
x = rep(3e-4, 5),   # x position for labels
y = rep(4.75e-8, 5) # y position for labels
)
# Top row: Allele frequency (q) plot
p_q <- ggplot(full_data, aes(x = s, y = q, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1, strip.position = "top") +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4)
) +
scale_y_continuous(
limits = c(0, 1),
breaks = c(0, 0.25, 0.5, 0.75, 1)
) +
# Add panel labels
geom_text(data = panel_labels_top, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
labs(y = "Allele Frequency", x = NULL, color = "Model")
# Bottom row: Mutation load plot
p_load <- ggplot(full_data, aes(x = s, y = load, color = Model)) +
geom_line() +
scale_color_manual(values = ploidy_colors) +
facet_wrap(~Dominance, nrow = 1) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
limits = c(0, 5e-8),
breaks = c(0, 1e-8, 2e-8, 3e-8, 4e-8, 5e-8),
labels = scales::label_scientific()
) +
# Add panel labels
geom_text(data = panel_labels_bottom, aes(x = x, y = y, label = label),
inherit.aes = FALSE, size = 4, hjust = 0) +
theme_bw(base_size = 11) +
labs(x = "s (Selection Coefficient)", y = "Mutation Load") +
theme(
legend.position = "none",
panel.grid.minor = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
strip.text.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
)
# Combine plots
final_plot <- p_q / p_load +
plot_layout(guides = "collect") & theme(legend.position = "bottom")
# Save
ggsave("equal_mut_bifn_alt.pdf", final_plot, width = 6.5, height = 4, units = "in")
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
ggsave("load_bump.pdf", p_load_bump, width = 7, height = 7, units = "in")
ggsave("load_bump.pdf", p_load_bump, width = 7.5, height = 7.5, units = "in")
# Update the plot to facet by both Variable and Dominance
p_load_bump <- ggplot(pd_genotype_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth = .75) +
facet_grid(Variable ~ Dominance, scales = "free_y",
labeller = labeller(Variable = as_labeller(variable_labeller, default = label_parsed),
Dominance = label_value)) +
scale_color_manual(values = c("Autotetraploid (beneath allotetraploid)" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
plot.caption = element_text(hjust = 0.5, size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 7.5, height = 7.5, units = "in")
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/deleterious_bifn/plot_bifn.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
ggsave("load_bump.pdf", p_load_bump, width = 7, height = 6.75, units = "in")
# Remove the dominance filter to include all dominance classes
pd_genotype_data <- full_data %>%
filter(Model %in% c("Autotetraploid (beneath allotetraploid)", "Allotetraploid")) %>%
select(s, Model, Dominance, PD, G0, G1, G2, G3, G4) %>%
pivot_longer(cols = c(PD, G0, G1, G2, G3, G4),
names_to = "Variable",
values_to = "Value") %>%
mutate(Variable = factor(Variable, levels = c("PD", "G0", "G1", "G2", "G3", "G4")))
# Update the plot to facet by both Variable and Dominance
p_load_bump <- ggplot(pd_genotype_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth = .75) +
facet_grid(Variable ~ Dominance, scales = "free_y",
labeller = labeller(Variable = as_labeller(variable_labeller, default = label_parsed),
Dominance = label_value)) +
scale_color_manual(values = c("Autotetraploid (beneath allotetraploid)" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
plot.caption = element_text(hjust = 0.5, size = 6),
axis.text.x = element_text(angle = 45, hjust = 1)
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 7, height = 6.5, units = "in")
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
