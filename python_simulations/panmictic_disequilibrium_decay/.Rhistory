scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# SECOND FIGURE: Load differences with mutation rate as rows
p_load_diff <- ggplot(all_diff_data, aes(x = s, y = load_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "Load (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.75, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.75, height = 5, units = "in")
mu_labeller <- c(
"1e-8" = "mu == 1e-8",
"1e-7" = "mu == 1e-7",
"1e-6" = "mu == 1e-6"
)
# FIRST FIGURE: Q differences with mutation rate as rows
p_q_diff <- ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# SECOND FIGURE: Load differences with mutation rate as rows
p_load_diff <- ggplot(all_diff_data, aes(x = s, y = load_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "Load (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.75, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.75, height = 5, units = "in")
# plot of PD and genotype distributions to explain the bump in load
dominant_data <- full_data %>%
filter(Dominance == "Dominant", Model %in% c("Autotetraploid", "Allotetraploid")) %>%
select(s, Model, PD, G0, G1, G2, G3, G4) %>%
pivot_longer(cols = c(PD, G0, G1, G2, G3, G4),
names_to = "Variable",
values_to = "Value") %>%
mutate(Variable = factor(Variable, levels = c("PD", "G0", "G1", "G2", "G3", "G4")))
# FIRST FIGURE: Q differences with mutation rate as rows
p_q_diff <- ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# Define colors for mutation rates
mu_colors <- c("1e-8" = "#000000",
"1e-7" = "#000000",
"1e-6" = "#000000")
mu_labeller <- c(
"1e-8" = "mu == 1e-8",
"1e-7" = "mu == 1e-7",
"1e-6" = "mu == 1e-6"
)
# FIRST FIGURE: Q differences with mutation rate as rows
p_q_diff <- ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# SECOND FIGURE: Load differences with mutation rate as rows
p_load_diff <- ggplot(all_diff_data, aes(x = s, y = load_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 11) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "Load (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.75, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.75, height = 5, units = "in")
# plot of PD and genotype distributions to explain the bump in load
dominant_data <- full_data %>%
filter(Dominance == "Dominant", Model %in% c("Autotetraploid", "Allotetraploid")) %>%
select(s, Model, PD, G0, G1, G2, G3, G4) %>%
pivot_longer(cols = c(PD, G0, G1, G2, G3, G4),
names_to = "Variable",
values_to = "Value") %>%
mutate(Variable = factor(Variable, levels = c("PD", "G0", "G1", "G2", "G3", "G4")))
# to change PD to have \Delta
variable_labeller <- c("PD" = "Delta", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
# to change PD to have \Delta
variable_labeller <- c("PD" = "Delta (PD)", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/Matlab_scripts/equal_mut_bifn/plot_equal_mut.R", echo = TRUE)
# to change PD to have \Delta
variable_labeller <- c("PD" = "Delta~(Panmictic~Disequilibrium)", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
# to change PD to have \Delta
variable_labeller <- c("PD" = "atop(Delta~(Panmictic, Disequilibrium))", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
# to change PD to have \Delta
variable_labeller <- c("PD" = "Delta_{11}~~(PD)", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
# to change PD to have \Delta
variable_labeller <- c("PD" = "Delta~~(PD)", "G0" = "G0", "G1" = "G1", "G2" = "G2", "G3" = "G3", "G4" = "G4")
p_load_bump <- ggplot(dominant_data, aes(x = s, y = Value, color = Model)) +
geom_line(linewidth=.75) +
facet_wrap(~Variable, scales = "free_y", ncol = 1, strip.position = "left",
labeller = as_labeller(variable_labeller, default = label_parsed)) +
scale_color_manual(values = c("Autotetraploid" = auto_color, "Allotetraploid" = allo_color)) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(labels = scales::label_scientific()) +
theme_bw(base_size = 12) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
strip.placement = "outside",
legend.position = "bottom"
) +
labs(x = "s (Selection Coefficient)", y = NULL, color = "Model")
ggsave("load_bump.pdf", p_load_bump, width = 4.5, height = 7, units = "in")
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.5, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.5, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.6, height = 5, units = "in")
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.6, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.6, height = 5, units = "in")
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.7, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.7, height = 5, units = "in")
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.75, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.75, height = 5, units = "in")
# FIRST FIGURE: Q differences with mutation rate as rows
p_q_diff <- ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 10) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# SECOND FIGURE: Load differences with mutation rate as rows
p_load_diff <- ggplot(all_diff_data, aes(x = s, y = load_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 10) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "Load (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
# Save the plots
ggsave("q_differences_by_mutation_rate.pdf", p_q_diff, width = 6.5, height = 5, units = "in")
ggsave("load_differences_by_mutation_rate.pdf", p_load_diff, width = 6.5, height = 5, units = "in")
ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 10) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
dev.off()
ggplot(all_diff_data, aes(x = s, y = q_diff, color = mu)) +
geom_line(linewidth = 0.7) +
geom_hline(yintercept = 0, linetype = "dashed", color = "gray50", alpha = 0.7) +
facet_grid(mu ~ Dominance,
scales = "free_y",  # Added free y-scales
labeller = labeller(mu = as_labeller(mu_labeller, default = label_parsed))) +
scale_color_manual(values = mu_colors, name = expression("Mutation Rate (" * mu * ")")) +
scale_x_log10(
limits = c(1e-9, 1e-3),
breaks = c(1e-8, 1e-6, 1e-4),
labels = scales::label_scientific()
) +
scale_y_continuous(
transform = "pseudo_log",
breaks = scales::pretty_breaks(n = 4),
labels = scales::label_scientific()
) +
theme_bw(base_size = 10) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_blank(),
legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1, size = 9)
) +
labs(
x = expression(s ~ "(Selection Coefficient)"),
y = expression(Delta ~ "q (Auto - Allo)"),
color = expression("Mutation Rate (" * mu * ")")
)
#Calculate tetraploid genotypes in allos
allo_infile$G0 <- allo_infile$G00
source("~/GitHub/Mutation_Selection_Balance_Autos_Allos/python_simulations/panmictic_disequilibrium_decay/plot_LD_Decay.R", echo = TRUE)
